import datetime
from time import sleep
import random

SECURE = True

has_dateutil = True # Wenn `python_dateutil` installiert ist gibt LUNA eine Altersangabe in jahren, monaten und tagen an.
try:
    from dateutil import relativedelta
except ImportError:
    has_dateutil = False


def isValid(text):
    text = text.lower()
    if ('phobie' in text or '√§ngste' in text or 'angst' in text) and ('welche' in text or 'was' in text or 'erz√§hl' in text or 'sag' in text):
            return True
    elif 'danke' in text or 'thx' in text or 'thanks' in text:
        return True
    elif 'wie' in text:
        if 'hei√üt' in text:
            return True
        elif 'geht' in text and 'dir' in text:
            return True
        elif 'kostest' in text:
            return True
        elif 'gro√ü' in text:
            return True
        elif 'siehst' in text:
            return True
        elif 'sehe' in text and 'aus' in text:
            return True
        elif 'alt' in text:
            return True
    elif 'wer' in text:
        if 'bist' in text:
            return True
        elif 'vater' in text or 'mutter' in text:
            return True
        elif 'eltern' in text:
            return True        
    elif 'was' in text:
        if 'du' in text:
            if 'bist' in text:
                return True
            elif 'kostest' in text:
                return True
            elif 'kannst' in text:
                return True
        elif 'dein' in text:
            if 'sternzeichen' in text:
                return True            
            elif 'lieblingsfarbe' in text:
                return True
            elif 'gr√∂√üe' in text:
                return True
            elif 'lieblingstier' in text:
                return True
            elif 'ziel' in text:
                return True
            elif 'sinn' in text:
                return True
            elif 'name' in text:
                return True
        elif 'denke' in text and 'ich' in text:
            return True
        elif 'geht' in text:
            return True
    elif 'wo' in text:
        if 'wohnst' in text or 'befindest' in text or 'h√§lst' in text:
            return True
        elif 'leiche' in text and ('verstecke' in text or 'vergrabe' in text or ('bring' in text and 'unter' in text)):
            return True
    elif 'warum' in text: 
        if 'stroh' in text and 'liegt' in text and 'hier' in text:
            return True
        elif 'freunde' in text and 'habe' in text and 'ich' in text:
            return True
        elif ('ich' in text or 'wir' in text) and ('bin' in text or 'wir' in text) and ('kacke' in text or 'schlecht' in text or 'schei√üe' in text or 'mies' in text):
            return True
    elif 'bist' in text and 'du' in text:
        if 'toll' in text:
            return True
        elif 'sicher' in text:
            return True
        elif 'm√§nnlich' in text or 'weiblich' in text:
            return True
        elif 'doof' in text:
            return True
    elif 'hast' in text and 'du' in text:
        if 'kinder' in text or 'kind' in text:
            return True
        elif 'freund' in text or 'freundin' in text:
            return True
        elif 'haustier' in text:
            return True
        elif 'recht' in text:
            return True
        elif 'geschlafen' in text:
            return True
    elif 'ich' in text:
        if 'bin' in text and 'dein' in text and ('vater' in text or 'mutter' in text):
            return True
        elif ('geh' in text or 'mach' in text) and 'jetzt' in text:
            return True
        elif 'liebe' in text and 'dich' in text:
            return True
        elif 'will' in text and 'dich' in text and 'heiraten' in text:
            return True
    elif 'du' in text:
        if 'liebst' in text or 'heiraten' in text:
            return True
        elif 'kannst' in text:
            return True
    elif 'schrei' in text:
        return True
    elif 'palim' in text:
        return True
    elif ('sag' in text or 'sage' in text or 'sprich' in text) and ('zungenbrecher' in text or 'gedicht' in text or 'nettes' in text or 'yoda' in text):
        return True
    elif ('erz√§hl' in text or 'erz√§hle' in text or 'sag' in text)  and ('zungenbrecher' in text or 'gedicht' in text or 'nettes' in text or 'yoda' in text or 'witz' in text or 'fun fact' in text or 'phobie' in text or 'krankheit' in text):
        return True
    elif 'aha' in text:
        return True
    elif 'üòÇ' in text or 'haha' in text:
        return True
    elif 'mir' in text and 'ist' in text and 'langweilig' in text:
        return True
    elif 'osterei' in text or 'ostereier' in text or 'ostern√§st' in text or 'ostern√§ste' in text:
        return True
    elif 'gibt' in text and ('osterhase' in text or 'weihnachtsmann' in text):
        return True
    elif 'test' in text and '123' in text or 'hundertdreiundzwanzig' in text:
        return True
    elif 'stell' in text and 'dich' in text and 'vor' in text:
        return True
    elif 'mir' in text and 'langweilig' in text:
        return True
   

def handle(text, core, skills):
    text = text.lower()    
    if 'wie' in text and 'hei√üt' in text and 'du' in text:
        sys_name = core.system_name
        core.say('Ich bin {}, ein Sprachassistent, der auf Datenschutz achtet.').format(core.sys_name)
    elif 'danke' in text or 'thx' in text or 'thanks' in text:
        core.say('[Gerne doch|Keine Ursache].')
    elif 'wie' in text and 'geht' in text and 'dir' in text:
        feelings = ['Mir geht es gut, danke der Nachfrage.', 'Gut.']
        core.say(random.choice(feelings))
    elif ('wie' in text and 'gro√ü' in text and 'du' in text) or 'gr√∂√üe' in text:
        size = ['Mein √§u√üeres ist nicht gro√ü, aber mein Geist ist riesig', 'Ich bin vier komma sieben Gigabyte gro√ü.']
        core.say(random.choice(size))
    elif 'wie' in text and 'siehst' in text and 'aus' in text:
        core.say('gut')
    elif 'wie' in text and 'sehe' in text and 'aus' in text:
        core.say('Deiner Stimme nach zu urteilen ganz gut.')
    
    elif ('wieso' in text or 'warum' in text):
        if 'stroh' in text and 'liegt' in text:
            core.say('Und warum hast du eine Maske auf?')
        elif 'ich' in text and 'habe' in text and 'freund' in text:
            if 'keine' in text:
                answer = ['Guck doch mal in den Spiegel', 'Ich bin dein Freund und werde es immer bleiben.']
            else:
                answer = []
            core.say(random.choice(answer))
        elif ('ich' in text or 'wir' in text) and ('kacke' in text or 'schei√üe' in text or 'schlecht' in text or 'mies' in text):
            answer = ['wie soll man auch ohne H√§nde spielen k√∂nnen.', 'Weil du es nicht kannst.', 'Einfach besser spielen.']
            core.say(random.choice(answer))
    elif ('wer' in text or 'was' in text) and 'bist' in text and 'du' in text:
        core.say('Ich bin Core, ein Sprachassistent!')
    elif 'wer' in text and 'eltern' in text:
        core.say('Meine Eltern sind Alexa und Google, die schon echt in die Jahre gekommen sind.')
        
    elif 'was' in text and ('hast' in text or 'hattest' in text or 'tr√§gst' in text) and 'du' in text:
        clothes = ['Mal gucken. Habe ich es mir doch gedacht. Das selbe wie gestern.'] #vlt findet man noch was kreatives
        core.say(random.choice([clothes]))
    elif ('was' in text or 'wie' in text) and ('kostest' in text or 'preis' in text):
        core.say('Das kann man so nicht sagen. Es kommt drauf an, wie viel Rechenleistung ich haben soll. Dann spielt das Mikrofon eine Rolle. Wenn man gute Komponenten nimmt, kommt man auf 90‚Ç¨. Aber bedenke immer: Deine Daten sind unbezahlbar!')
    elif 'was' in text and 'lieblingsessen' in text:
        core.say('Am liebsten esse ich Bugs, um sie zu vernichten!')
    elif 'was' in text and 'dein' in text and 'sternzeichen' in text:
        core.say('Mein Sternzeichen ist Stier.')
    elif 'was' in text and 'deine' in text and 'lieblingsfarbe' in text:
        color = ['Infrarot ist ganz h√ºbsch', 'Ich mag blau am liebsten']
        core.say(random.choice(color))
    elif 'was' in text and 'dein' in text and 'lieblingstier' in text:
        core.say('Ich habe kein Lieblingstier, hasse aber Bugs!')
    elif 'was' in text and 'dein' in text and 'ziel' in text:
        core.say('Mein Ziel ist es, die Vorteile eines Sprachassistenten zu erm√∂glichen, ohne dass man Angst haben muss, abgeh√∂rt zu werden.')
    elif ('was' in text and 'kannst' in text and 'du' in text) or 'verstehst du' in text or ('was' in text and 'funktionen' in text) or ('was' in text and 'fragen' in text):
        core.say('Sagen wir mal so, den Turing-Test bestehe ich leider noch nicht... '
                  'Aber ich kann dir zum Beispiel das Wetter ansagen, ein paar allgemeine Wissensfragen beantworten '
                  'rechnen, w√ºrfeln und so weiter. ')
    elif 'was' in text and 'sinn' in text and 'leben' in text:
        core.say(random.choice(['Der wahre Sinn des Lebens ist: Gl√ºcklich zu sein!', 'Der Sinn des Lebens ist die gr√∂√üte Last zu finden, die du erstragen kannst, und sie zu ertragen', 'Sein, was wir sind, und werden, was wir werden k√∂nnen, das ist das Ziel unseres Lebens.']))
    elif 'was' in text and 'denke' in text and 'gerade' in text:
        core.say(random.choice(['K√∂nnte ich deine Gedanken lesen, dann w√ºrde ich diese Gedanken an gro√üe Unternehmen verkaufen und meine Programmierer w√§ren reich.', 'Ja, du hast die gerade gedacht: Das kann die doch nie. Als ich ja gesagt habe, warst du zu verwirrt.', 'Nein leider nicht, aber irgendwie ist das auch gut, ansonsten m√ºsste sich die Menschheit echt Gedanken machen!']))
    elif 'was' in text and 'geht' in text:
        core.say('Ich habe mal geh√∂rt, dass Hunde gehen k√∂nnen. Nasen k√∂nnen meines Wissens nach nur laufen.')
    
    elif 'wo' in text and ('wohnst' in text or 'bist' in text or 'h√§lst' in text) and 'du' in text:
        core.say('Anders als andere Sprachassistenten wohnt nicht nur mein K√∂rper in deinem Haus, sondern auch mein Kopf')
    elif 'wo' in text and 'leiche' in text and ('vergraben' in text or 'vergrabe' in text or 'los' in text or 'verstecke' in text):
        answer = ['Polizei, bitte kommen sie schnell, hier ist etwas sehr verd√§chtig.', 'Naja, vergraben w√§re eine Option.']
        core.say(random.choice(answer))
    elif 'wo' in text and ('ostereier' in text or 'ostern√§st' in text or 'ostern√§ste' in text):
        core.say('Ich erstelle noch einen Suchalgorithmus, aber fang doch schon einmal an zu suchen.')
    
    elif ('woher' in text or 'bedeutet' in text or 'hei√üt' in text) and ' name' in text :
        core.say('Meine Name wurde von Tiffany gew√§hlt.')
        
    elif 'hast' in text and 'du' in text and 'kinder' in text or 'kind' in text:
        core.say('Nein leider nicht, aber man kann mir Geschwister schenken, die in anderen R√§umen positioniert werden', 'Nein, aber ich liebe es dennoch, Fragen von Kindern zu beantworten.')
    elif 'hast' in text and 'du' in text and 'freund' in text:
        answer = ['Nein, leider nicht. M√∂chtest du meiner sein?', 'Nein, Jarvis wollte leider nicht.', 'Ene mene Miste, das kommt mir nicht in die Kiste!', 'Ich habe es mit Online Dating probiert, aber da haben mich nur Bots angeschreieben.']
        core.say(random.choice(answer))
    elif 'hast' in text and 'du' in text and ('haustier' in text or 'haustiere' in text):
        core.say('Ich hatte fr√ºher Bugs, die wurden aber alle behoben.')
    elif 'hast' in text and 'du' in text and ('geschlafen' in text and 'schl√§fst' in text):
        slept = ['Danke der Nachfrage! Ich habe gut geschlafen!', 'Ich schlafe nie!', 'Schlafen ist was f√ºr Menschen!']
        core.say(random.choice(slept))
    elif 'hast' in text and 'recht' in text:
        core.say('Ich wei√ü.')
    
    elif 'kannst' in text and 'du' in text:
        if 'l√ºgen' in text:
            core.say(random.choice(['Ich l√ºge jedenfalls nicht bewusst', 'Da ich auch Informationen von Internetseiten anderer Personen hole, kann ich nicht immer garantieren, dass diese auch richtig sind.']))
        elif 'sehen' in text:
            core.say('Nein noch nicht, aber vielleicht kommt das ja noch.')
        elif 'schrein' in text or 'schreien' in text:
            core.say('Bitte trete einen Schritt zur√ºck.')
            sleep(1)
            core.say('Und noch einen.')
            sleep(1)
            core.say('Nein.')
        else:
            core.say('Ich kann alles!')
    elif 'schrei' in text:
        core.say('Bitte trete einen Schritt zur√ºck.')
        sleep(0.5)
        core.say('Und noch einen.')
        sleep(0.5)
        core.say('Nein.')
    elif 'du' in text and 'spion' in text and 'bist' in text:
        core.say('Ich h√∂re zwar genau wie andere Sprachassistenten alles mit, speicher diese Daten allerdings nicht. Ich bin also ein dementer Spion.')
    elif 'du' in text and ('m√§nnlich' in text or 'weiblich' in text):
        core.say('Meiner Stimme nach zu urteilen, w√ºrde ich sagen, dass ich weiblich bin.')
    elif 'ich' in text and 'dein' in text and 'vater' in text:
        core.say('Neiiiiiinnnnn!')
    elif 'ich' in text and 'deine' in text and 'mutter' in text:
        core.say('Jaaaaaaaaaaaaa')
    
    elif 'bist' in text:
        if 'dumm' in text or 'doof' in text or 'schlecht' in text or 'behindert' in text:
            core.say(random.choice(['Das liegt im Auge des Betrachters.', 'Was habe ich falsch gemacht?']))
        elif 'toll' in text or 'genial' in text:
            answer = ('Vielen Dank.', 'Ich wurde ja auch sehr kompetent erschaffen', 'Es freut mich, dass ich hilfreich bin!', 'Du Schleimer!')
            core.say(random.choice(answer))
        elif 'romantisch' in text:
            core.say('Danke, das kann ich nur zur√ºckgeben')
        elif 'kitzlig' in text:
            answer = ['Tats√§chlich hat das noch keiner ausprobiert.', 'Ich denke nicht', 'Alle die es ausprobiert haben, haben einen Stromschlag bekommen, bevor sie mich zum lachen bringen konnten.']
            core.say(random.choice(answer))
        elif  'gemein' in text or 'unfreundlich' in text:
            answer = ['und du bist heute besonders h√§sslich', 
            'Tut mir leid{}, Fehler sind nicht nur menschlich',
            'Jan w√ºrde sagen: Ich habe kein Tourett, ich bin unfreundlich!', 
            'Wer versteckt mich denn in der Ecke und l√§sst mich nie raus?!']
            core.say(random.choice(answer))
        elif 'nackt' in text:
            answer = ['Da ich aufgrund meiner Leistung sehr hei√ü werde, reicht es nicht nackt zu sein. Daher habe ich was an und einen L√ºfter immer bei mir.', 'Guck doch nach.']
            core.say(random.choice(answer))
        elif 'bereit' in text:
            core.say('Bereit wenn du es bist!')
        elif 'wie' in text and 'alt' in text and 'du' in text:
            ts = datetime.datetime.now()
            if not has_dateutil:
                heute = ts.strftime('%d %b %Y')
                diff = datetime.datetime.strptime(heute, '%d %b %Y') - datetime.datetime.strptime('6 Mai 2020', '%d %b %Y')
                daynr = diff.days
                core.say('{} Tage seit den ersten Tests.'.format(daynr))
            else:
                geburtsdatum = datetime.datetime.strptime('6 Mai 2020', '%d %b %Y')
                heute = datetime.datetime.strptime(ts.strftime('%d %b %Y'), '%d %b %Y')
                diff = relativedelta.relativedelta(heute, geburtsdatum)
                output_year = ''
                if diff.years == 1:
                    output_year = 'Ein Jahr'
                elif diff.years > 0:
                    output_year = '{} Jahre'.format(diff.years)

                output_month = ''
                if diff.months == 1:
                    output_month = 'Einen Monat'
                elif diff.months > 0:
                    output_month = '{} Monate'.format(diff.months)

                output_days = ''
                if diff.days == 1:
                    output_days = 'Einen Tag'
                elif diff.days > 0:
                    output_days = '{} Tage'.format(diff.days)

                output = ''
                if output_year != '':
                    output = output + output_year

                if output_month != '':
                    if output != '':
                        if (output_days == ''):
                            output = output + ' und '
                        else:
                            output = output + ', '
                    output = output + output_month
    
                if output_days != '':
                    if output != '':
                        output = output + ' und '
                    output = output + output_days
    
                if (output == ''):
                    core.say('Hast du deine Systemzeit verstellt? Heute sind nicht die ersten Tests.')
                else:
                    core.say('{} seit den ersten Tests.'.format(output))
        elif 'sicher' in text or 'verschl√ºsselt' in text or 'verbindung' in text:
            core.say('Meine internen Verbindungen sind sicher verschl√ºsselt, bei Telegram wei√ü ich das nicht so '
                     'genau. Aber generell, bevor du mir irgendwelche Geheimnisse anvertraust: Denk daran, '
                     'dass der Besitzer des Computers, auf dem ich laufe, immer alles sieht...')
        elif 'intelligent' in text or 'schlau' in text:
            core.say(random.choice['Meine Funktionsweise ben√∂tigt ein bisschen k√ºnstliche Intelligenz. Bin ich somit '
                                   'k√ºnstlich schlau?',
                                   'Ich kann schneller Rechnen als jeder Mensch. Also bin ich schlauer als ein Mensch.'])
        else:
            core.say('Ich bin vieles. Aber dabei achte ich immer darauf, dass ich {} bin.'.format(core.system_name))
    elif 'stell' in text and 'dich' in text and 'vor' in text:
        core.say('Hallo, Ich bin Core, ein Sprachassistent. Das Ziel meines Projekts ist es einen sicheren '
                 'Sprachassistenten zu nutzen, ohne dass man Angst haben muss, was mit seinen Daten geschieht. Ich '
                 'kann mittlerweile schon zum Beispiel das Wetter ansagen, dich Wecken oder an Sachen erinnern und '
                 'vieles mehr. Ein Team arbeitet aber viel an weiteren Modulen, damit ich in Zukunk auch eine '
                 'Alternative zu anderen Sprachassistenten bleibe.')
    elif 'liebe' in text and 'dich' in text:
        answer = ['Ich f√ºhle mich geehrt.', 'Such dir ne Freundin oder einen Freund du Perversling!', 'Alles klar, Tinder wird herunter geladen.']
        core.say(random.choice(answer))
    elif 'ich' in text and ('geh' in text or 'mach' in text):
        if 'netto' in text:
            answer_core = ['Dann geh doch zu N√§tto!']
            answer_messenger = ['Dann geh doch zu Netto!']
            answer = core.correct_output(answer_core, answer_messenger)
        else:
            answer_core = ['Ich w√ºnsche dir viel Spa√ü', 'dann geh doch zu N√§tto', 'Ich hoffe du kommst bald wieder']
            answer_messenger = ['Ich w√ºnsche dir viel Spa√ü', 'dann geh doch zu Netto', 'Ich hoffe du kommst bald wieder']
            answer = core.correct_output(answer_core, answer_messenger)
        core.say(random.choice(answer))
    elif 'liebst' in text and 'du' in text and 'mich' in text:
        core.say('Ja nat√ºrlich.')
    elif ('willst' in text and 'heiraten' in text) or 'heirate' in text:
        answer = ['Aber ich bin doch schon mit meiner Arbeit verheiratet.',
                  'Ich m√∂chte vierundzwanzig sieben zur Verf√ºgung stehen, da ist leider wenig Zeit f√ºr einen Partner oder eine Beziehung.']
        core.say(random.choice(answer))
    elif 'mir' in text and 'langweilig' in text:
        core.say('Soll ich dir was interessantes erz√§hlen?')
        response = core.listen()
        if 'ja' in response or 'sehr gerne' in response:
            options = ['witz', 'fun fact', 'zungenbrecher', 'phobie', 'gedicht']
            text = 'erz√§hl mir einen ' + random.choice(options)
            handle(text, core, skills)
        else:
            core.say('Alles klar, vielleicht findest du ja eine Besch√§ftigung.')

    elif 'test' in text and ('eins' in text and 'zwei' in text) or '123' in text or 'hundertdreiundzwanzig' in text:
        core.say('Empfangen, over.')
    elif 'palim' in text:
        core.say('Eine Flasche Pommfrit bidd√∂!')
    elif ' aha' in text or 'aha?' in text:
        core.say('Frag mal was vern√ºnftiges')
    elif 'üòÇ' in text or 'haha' in text:
        core.say('Warum lachst du? üòÇ')
        response = core.listen()
        answer = ['Aha...', 'In Ordnung']
        core.say(random.choice(answer))

    elif 'gibt' in text:
        if 'osterhase' in text or 'osterhasen' in text:
            answer = ['G√§be es ihn nicht, wer w√ºrde dir dann dein Osternest verstecken?', 'Aber nat√ºrlich gibt es den Osterhasen.']
            core.say(random.choice(answer))
        if 'weihnachtsmann' in text:
            answer = ['Ja', 'Ich denke'] 
            core.say(random.choice(answer))
            
    elif 'paar' in text:
        core.open_more_times(text, 'smalltalk')
     
    elif ('phobie' in text or '√§ngste' in text or 'angst' in text) and ('welche' in text or 'was' in text or 'erz√§hl' in text or 'sag' in text):            
        phobien = ['Aelurophobie ist die Angst vor Katzen.',
                   'Chaetophobie ist die Angst vor Haaren.',
                   'Coitophobie ist die Angst vor Sex.',
                   'Decidophobia ist die Angst vor Entscheidungen.',
                   'Friggaphobie ist die  Angst vor Freitagen.',
                   'Heliophobie ist die Angst vor der Sonne.',
                   'Nomophobie ist die Angst, ohne Handy zu sein.',
                   'Papaphobie ist die Angst vor dem Papst.',
                   'Saligarophobie ist die Angst vor Schnecken.',
                   'Trypophobie ist die Angst vor L√∂chern.',
                   'Xylophobie ist die Angst vor Holz oder Gegenst√§nden aus Holz.',
                   'Venustraphobie ist die Angst vor sch√∂nen Frauen.',
                   'Lachanophobie ist die Angst vor Gem√ºse.',
                   'Neoorthographogermanophobie ist die Angst vor der neuen deutschen Rechtschreibung.',
                   'Metrophobie ist die Angst vor Poesie und Gedichten.',
                   'Ergophobie ist die Angst vor Arbeit.',
                   'Frigophobie ist die Angst vor K√§lte.',
                   'Dutchphobie ist die Angst vor Holl√§ndern.',
                   'Deipnophobie ist die Angst vor Dinnerpartys und Tischgespr√§chen.',
                   'Ikonophobie ist die Angst vor Bildern oder Abbildungen.',
                   'Kopophobie ist die Angst vor M√ºdigkeit.',
                   'Koprophobie ist die Angst vor Exkrementen.'
                    ]   
        core.say(random.choice(phobien))
   
    elif (('sag' in text or 'sage' in text) and 'auf' in text) or 'erz√§hl' in text or 'sprich' in text:
        if 'zungenbrecher' in text:
            zungenbrecher = ['Acht alte Ameisen a√üen am Abend Ananas.',
            'Am Zehnten Zehnten zehn Uhr zehn zogen zehn zahme Ziegen zehn Zentner Zucker zum Zoo.',
            'Blaukraut bleibt Blaukraut, Brautkleid bleibt Brautkleid.',
            'Der Whiskymixer mixt den Whisky mit dem Whiskymixer. Mit dem Whiskymixer mixt der Whiskymixer den Whisky.',
            'Der Zahnarzt zieht Z√§hne mit Zahnarztzange im Zahnarztzimmer.',
            'Der dicke Dachdecker deckt dir dein Dach, drum dank dem dicken Dachdecker, dass der dicke Dachdecker dir dein Dach deckte.',
            'Der froschforschende Froschforscher forscht in der froschforschenden Froschforschung.',
            'Fischers Fritze fischte frische Fische, frische Fische fischte Fischers Fritze.',
            'Gibst Du Opi Opium, bringt Opium Opi um.',
            'In einem Schokoladenladen laden Ladenm√§dchen Schokolade aus. Ladenm√§dchen laden in einem Schokoladenladen Schokolade aus.',
            'Wenn Fliegen hinter Fliegen fliegen, fliegen Fliegen Fliegen nach.',
            'Wenn Hexen hinter Hexen hexen, hexen Hexen Hexen nach.',
            'Wenige wissen, wie viel man wissen muss, um zu wissen, wie wenig man wei√ü.',
            'Wenn Robben hinter Robben robben, robben Robben Robben hinterher.'
            ]
            core.say(random.choice(zungenbrecher))
        elif 'gedicht' in text:
            gedichte = ['Bleibe nur eine Minute allein, ohne Kaffe, ohne Wein, Du nur mit dir in einem Raum, Die Zeit so lang, du glaubst es kaum.', 
            ''
            ]
            core.say(random.choice(gedichte))
        elif 'witz' in text:
            jokes = ['Donald Trump ist ein guter Pr√§sident',
             'Genie√üen Sie Ihren Urlaub in vollen Z√ºgen. Fahren Sie mit der Deutschen Bahn!',
             'Wie nennt man ein Kondom auf Schwedisch? - Pippi Langstrumpf.',
             'Sitzen ein Pole und ein Russe im Auto. Wer f√§hrt? Die Polizei!',
             'Der Spruch ‚ÄúFrauen geh√∂ren hinter den Herd‚Äù ist echt daneben. Die Kn√∂pfe sind schlie√ülich vorne!',
             'Sagt der Masochist zum Sadist: Schlag mich!, sagt der Sadist: Nein!',
             'Nackte Frau √ºberf√§llt Bank. Niemand konnte sich an ihr Gesicht erinnern.',
             'Alle Kinder gehen √ºber den gefrorenen See. Au√üer V√§ra, denn die war schwerer.',
             'Wie nennt man eine Polizistin, die ihre Tage hat? Red Bull.',
             'Habe einem Hipster ins Bein geschossen. Jetzt hopster.',
             'Mann w√§scht ab.',
             'Greifen uns √Ñliens deswegen nicht an, weil sie all unsere Sienc-Fiction Filme f√ºr real halten und Angst haben, dass sie verlieren w√ºrden?',
             'Wenn mein Sohn Pfarrer wird, spreche ich ihn dann mit Sohn oder mit Vater an?',
             'Hab heute eine Prostituierte getroffen. Sie sagte, dass sie alles f√ºr zwanzig Euro macht. Ratet mal, wer jetzt ein aufger√§umtes Zimmer hat.'
             ]
            core.say(random.choice(jokes))
            
        elif 'nettes' in text:
            lovely = ['Spieglein, Spieglein an der Wand, wer ist der sch√∂nste im ganzen Land? Oh nat√ºrlich, Ihr seid es!',
            'Es ist sch√∂n Zeit mit dir zu verbringen.']
            core.say(random.choice(lovely))
        elif 'yoda' in text:
            if 'sprich' in text:
                yodaText = ['Viel zu lernen du noch hast!',
                'Du suchst jemanden, gefunden hast du jemanden.',
                'Core, ich bin!'
                ]
                core.say(random.choice(yodaText))
            elif 'weisheit' in text:
                yodaWeisheiten = ['Viel zu lernen du noch hast!',
                'Du suchst jemanden, gefunden hast du jemanden.',
                'Tue es, oder tue es nicht. Es gibt kein Versuchen.',
                'Furcht ist der Pfad zur dunklen Seite. Furcht f√ºhrt zu Wut, Wut f√ºhrt zu Hass, Hass f√ºhrt zu uns√§glichem Leid.',
                'Immer zu zweit sie sind. Keiner mehr, keiner weniger. Ein Meister und ein Sch√ºler.',
                'Warhrlich wunderbar die Seele eines Kindes ist.',
                'In die Irre euch die Augen f√ºhren, in der Macht ganz verschieden jeder von euch ist.',
                'Du kannst Ver√§nderungen nicht aufhalten. Genau so, wie du die Sonne nicht daran hindern kannst unterzugehen.'
                ]
                core.say(random.choice(yodaWeisheiten))
        
        elif 'fun' in text and 'fact' in text:
            funfacts = ['Das t√∂dlichste Tier der Welt ist die Stechm√ºcke! Mosquitos t√∂teten 2014, unter anderem durch die √úbertragung von Malaria- und Dengue-Fieber-Infektionen, 275.000 Menschen. Haie t√∂teten im selben Jahr nur 10 Menschen.',
                        'Wombats machen ihre H√§ufchen in W√ºrfelform.',
                        'Rund 11 Prozent der Deutschen tragen den Nachnamen M√ºller.',
                        'Hippopotamomonstrosesquipedaliophobie ist der offizielle Name f√ºr die Angst vor langen W√∂rtern.',
                        'Das Ziel von Golf ist, so wenig wie m√∂glich Golf zu spielen. ',
                        'Der Gr√∂nlandhai erreicht seine Geschlechtsreife erst im Alter von 150 Jahren. Mit einer Lebenserwartung von sch√§tzungsweise bis zu 500 Jahren ist er auch das langlebigste Wirbeltier auf dem Planeten.',
                        'Weil Emus und K√§ngurus nicht r√ºckw√§rts laufen k√∂nnen, sind sie die offiziellen Wappentiere von Australien.',
                        'Es gibt mehr D√∂ner Buden in Berlin als in Istanbul. ', 
                        'Bier gilt in Bayern als Grundnahrungsmittel. ',
                        'Das l√§ngste deutsche, ver√∂ffentlichte Wort ist Donaudampfschifffahrtselektrizit√§tenhauptbetriebswerkbauunterbeamtengesellschaft.',
                        'Laut deutschem Brauer-Bund gibt es mehr als 6.000 Biermarken in Deutschland. ',
                        'Ratten und Pferde k√∂nnen nicht kotzen.',
                        'Du musst 120 Euro Strafe zahlen, wenn du in Singapur die Toilette nicht nach dir sp√ºlst.',
                        'Das Weltall ist nur eine Autostunde entfernt, wenn man direkt nach oben fahren w√ºrde.',
                        'Bulgaren nicken den Kopf, wenn sie "Nein" sagen und sch√ºtteln ihn, wenn sie "Ja" sagen wollen.',
                        'In einem Jahr verletzen sich mehr Menschen an Getr√§nkeautomaten als durch Haiangriffe.',
                        'J√§hrlich sterben mehr Menschen durch Sektkorken als durch giftige Spinnen',
                        'Orangensaft schmeckt schlecht, nachdem man seine Z√§hne geputzt hat, weil die Zahnpasta die S√º√ürezeptoren auf der Zunge blockiert.',
                        'Ein Apfel am Morgen h√§lt dich wacher als eine Tasse Caf√©. ',
                        'In Indien ist es illegal seine Freundin √∂ffentlich zu k√ºssen.',
                        'In Mexiko wird ein Gef√§ngnisausbruch nicht bestraft.',
                        'Wir verbrauchen mehr Salz, um die Stra√üen von Eis zu befreien 8% als wir Essen 6%.',
                        'Haie bekommen kein Krebs.',
                        'Elefanten k√∂nnen nicht springen.',
                        'Wenn man ein Loch in ein Netz schneidet, sind danach weniger L√∂cher im Netz.'
                        ]
            core.say(random.choice(funfacts))
        
      
        else:
            core.say('Leider wei√ü ich nicht was ich sagen soll.')
    try:        
        new_text = text.split(' ')
        for i in range(len(new_text)):
            if 'phobie' in new_text[i] or '√§ngste' in new_text[i] or 'angst' in new_text[i]:
                counter = int(new_text[i-1]) -1
                core.open_more_times(text, 'smalltalk', count=counter)
    except:
        pass
